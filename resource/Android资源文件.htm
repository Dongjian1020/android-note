<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0041)http://java-admin.javaeye.com/blog/462164 -->
<HTML dir=ltr xml:lang="zh-CN" 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><TITLE>Android资源文件 - java-admin - JavaEye技术网站</TITLE>
<META http-equiv=Content-Type content="text/html; charset=UTF-8">
<META 
content="  Android资源文件            &nbsp;&nbsp;&nbsp; 资源是您在代码中使用到的并且在编译时被打包进您的应用程序的附加文件。Android支持多种不同的文件，包括XML、PNG和JPEG文件。XML文件的格式决定于其描述的内容。这些文件将描述文件支持的类型、语法或格式。  处于加载效率的考虑，资源被从代码中分离出来，而且XML文件被编译进二进制代码中。字符串，类似的会被压缩存储为更经济的格式。处于 ..." 
name=description>
<META content="android资源文件  Android资源文件" name=keywords><LINK 
href="/images/favicon.ico" type=image/x-icon rel="shortcut icon"><LINK 
title=JavaEye href="/open_search.xml" type=application/opensearchdescription+xml 
rel=search><LINK title=java-admin href="/rss" type=application/rss+xml 
rel=alternate><LINK media=screen href="Android资源文件.files/blog.css" type=text/css 
rel=stylesheet><LINK media=screen href="Android资源文件.files/blue.css" 
type=text/css rel=stylesheet>
<SCRIPT src="Android资源文件.files/application.js" type=text/javascript></SCRIPT>
<LINK media=screen href="Android资源文件.files/SyntaxHighlighter.css" type=text/css 
rel=stylesheet>
<SCRIPT src="Android资源文件.files/shCoreCommon.js" type=text/javascript></SCRIPT>

<SCRIPT src="Android资源文件.files/hotkey.js" type=text/javascript></SCRIPT>

<STYLE>DIV#main {
	BORDER-TOP-WIDTH: 0px; PADDING-RIGHT: 0px; PADDING-LEFT: 0px; BORDER-LEFT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; PADDING-BOTTOM: 0px; WIDTH: 740px; PADDING-TOP: 0px; BACKGROUND-COLOR: transparent; BORDER-RIGHT-WIDTH: 0px
}
</STYLE>
<LINK media=screen href="Android资源文件.files/ui.css" type=text/css rel=stylesheet>
<SCRIPT src="Android资源文件.files/compress.js" type=text/javascript></SCRIPT>

<META content="MSHTML 6.00.2900.5726" name=GENERATOR></HEAD>
<BODY>
<DIV id=header>
<DIV id=blog_site_nav><A class=homepage href="http://www.javaeye.com/">首页</A> <A 
href="http://www.javaeye.com/news">新闻</A> <A 
href="http://www.javaeye.com/forums">论坛</A> <A 
href="http://www.javaeye.com/ask">问答</A> <A 
href="http://www.javaeye.com/blogs">博客</A> <A 
href="http://www.javaeye.com/job">招聘</A> <A id=msna onclick="return false;" 
href="http://java-admin.javaeye.com/blog/462164#"><U>更多</U> <SMALL>▼</SMALL></A> 

<DIV class=quick_menu style="DISPLAY: none"><A 
href="http://www.javaeye.com/wiki">专栏</A> <!--<a href="http://www.javaeye.com/articles">文摘</a>//--><A 
href="http://www.javaeye.com/groups">圈子</A> <A 
href="http://www.javaeye.com/search">搜索</A> </DIV></DIV>
<DIV id=user_nav><A class=welcome title=登录 
href="http://java-admin.javaeye.com/login">您还未登录 !</A> <A style="COLOR: red" 
href="http://www.javaeye.com/all">我的应用</A> <A 
href="http://java-admin.javaeye.com/login">登录</A> <A class=nobg 
href="http://java-admin.javaeye.com/signup">注册</A> </DIV></DIV>
<DIV id=page>
<DIV class=clearfix id=branding>
<DIV id=blog_name>
<H1><A href="http://java-admin.javaeye.com/">java-admin</A></H1></DIV>
<DIV id=blog_preview></DIV>
<DIV id=blog_domain>永久域名 <A 
href="http://java-admin.javaeye.com/">http://java-admin.javaeye.com/</A></DIV></DIV>
<DIV class=clearfix id=content>
<DIV id=main>
<DIV class=blog_main>
<DIV class=blog_nav>
<DIV class=pre_next><A class=next title="android 布局管理" 
href="http://java-admin.javaeye.com/blog/463925">android 布局管理</A> | <A class=pre 
title=对话框和浮动Activity 
href="http://java-admin.javaeye.com/blog/461982">对话框和浮动Activity</A> </DIV></DIV>
<DIV class=blog_title>
<DIV class=date><SPAN class=year>2009</SPAN><SPAN class=sep_year>-</SPAN><SPAN 
class=month>09</SPAN><SPAN class=sep_month>-</SPAN><SPAN 
class=day>04</SPAN></DIV>
<H3><A href="http://java-admin.javaeye.com/blog/462164">Android资源文件</A></H3>关键字: 
android资源文件 </DIV>
<DIV class=blog_content>
<DIV class=articleTitle>
<DIV style="DISPLAY: inline"><STRONG id=t_3f7f41d40100dodc><SPAN 
style="FONT-SIZE: small">Android资源文件</SPAN></STRONG></DIV></DIV>
<DIV class=articleTitle>
<DIV style="DISPLAY: inline"></DIV></DIV>
<DIV class=articleContent id=articleBody>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
资源是您在代码中使用到的并且在编译时被打包进您的应用程序的附加文件。Android支持多种不同的文件，包括XML、PNG和JPEG文件。XML文件的格式决定于其描述的内容。这些文件将描述文件支持的类型、语法或格式。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">处于加载效率的考虑，资源被从代码中分离出来，而且XML文件被编译进二进制代码中。字符串，类似的会被压缩存储为更经济的格式。处于这样或那样的原因，Android平台中会存在很多不同的资源和资源定义文件。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">这些文件包括以下部分：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; * 资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
o&nbsp;&nbsp;&nbsp; 创建资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
o&nbsp;&nbsp;&nbsp; 使用资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
§&nbsp; 在代码中使用资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;§&nbsp; 
引用资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
§&nbsp; 引用主体属性</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
§&nbsp; 使用系统属性</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
o&nbsp;&nbsp;&nbsp; 更改资源</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
o&nbsp;&nbsp;&nbsp; 资源引用</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
o&nbsp;&nbsp;&nbsp; 术语表</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; * 国际化（l18N）</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
配合资源引用文档，Android提供了一套经济的资源处理技术。他转化了大量的资源信息，使Android在运行时无需了解文档的内容，仅仅在您需要的时候指导他在哪儿就可以了。<BR><STRONG>资源</STRONG></SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp; 
这一节包含了与资源有关联的术语表和一系列使用资源的代码事例。更完整的Android资源指南请参看“资源”一章。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">Android资源系统保存所有与代码无关资源的存根。您可以使用Resources类访问您应用程序的资源；与应用程序相关联的资源实例可以通过Context.getResources()得到。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">一个应用程序的资源可以被构建系统在构建时编译进二进制的应用程序里。为了使用资源，您需要正确的初始化您应用程序中的资源树并且构建您的应用程序。在构建过程的部分，每个资源的标识被产生，您可以在代码中使用他们。这些标识允许编译器校验您应用程序中的代码和资源定义是否匹配。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">有关本章的其他细节请参见教程如何使用资源的部分。</SPAN></P>
<P><BR><STRONG><SPAN style="FONT-SIZE: small">创建资源</SPAN></STRONG></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp; 
Android支持字符串，位图和许多其他类型的资源。每一种资源定义文件的语法和格式及保存的位置取决于其依赖的对象。通常，您可以通过三种文件创建资源：XML文件（除位图和原生文件外），位图文件（作为图片）和原生文件（所有其他的类型，比如声音文件）。事实上，这里有两种不同类型的XML文件，一种是作为资源被编译近应用程序，另一种怎是资源的描述，被aapt使用。下面的表格详细说明了这些XML文件的类型和结构。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">您可以在您项目res/目录下的适当子目录下创建和存储资源文件。Android使用资源编译器访问资源所在的子目录和格式化的文件。下面的表格列出了每一种资源的文件类型。参见“资源引用”一节可以了解关于对象、语法和格式方面的内容。</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<TABLE style="WIDTH: 80%" cellSpacing=1 cellPadding=3 border=1>
  <TBODY>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;目录</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;资源类型</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/anim</SPAN></TD>
    <TD><SPAN 
  style="FONT-SIZE: small">&nbsp;XML文件编译为桢序列动画或者自动动画对象。</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/drawable</SPAN></TD>
    <TD>
      <P><SPAN 
      style="FONT-SIZE: small">&nbsp;.png，9.png，.jpg文件被编译为Drawable资源子类型：</SPAN></P>
      <P><SPAN 
      style="FONT-SIZE: small">使用Resources.getDrawable(id)可以获得资源类型</SPAN></P>
      <P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; * 
      位图文件<BR>&nbsp;&nbsp;&nbsp; * 9-patchs（可变位图文件）</SPAN></P></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/layout</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;资源编译为屏幕布局器。参见“布局器”一章</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/values</SPAN></TD>
    <TD>
      <P><SPAN style="FONT-SIZE: small">&nbsp;XML 文件可以被编译为多种资源</SPAN></P>
      <P><SPAN 
      style="FONT-SIZE: small">注意：不像其他res下的目录，这个目录可以包含多个资源描述文件。XML文件元素类型控制着这些资源被R类放置在何处。</SPAN></P>
      <P><SPAN style="FONT-SIZE: small">这些文件可以自定义名称。这里有一些约定俗成的文件。</SPAN></P>
      <P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; * arrays.xml 
      定义数组。<BR>&nbsp;&nbsp;&nbsp; * colors.xml 
      定义可绘制对象的颜色和字符串的颜色。使用Resources.getDrawable()和Resources.getColor()都可以获得这些资源。<BR>&nbsp;&nbsp;&nbsp; 
      * dimens.xml 定义尺度。使用Resources.getDimension()可以获得这些资源<BR>&nbsp;&nbsp;&nbsp; 
      * strings.xml 
      定义字符串（使用Resources.getString()或者更适合的Resources.getText()方法获得这些资源。Resources.getText()方法将保留所有用于描述用户界面样式的描述符，保持复杂文本的原貌。<BR>&nbsp;&nbsp;&nbsp; 
      * styles.xml 定义样式对象</SPAN></P></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/xml</SPAN></TD>
    <TD><SPAN 
      style="FONT-SIZE: small">&nbsp;自定义的XML文件。这些文件将在运行时编译近应用程序，并且使用Resources.getXML()方法可以在运行时获取。</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;res/raw</SPAN></TD>
    <TD><SPAN 
      style="FONT-SIZE: small">&nbsp;自定义的原生资源，将被直接拷贝入设备。这些文件将不被压缩近您的应用程序。使用带有ID参数的Resources.getRawResource()方法可以获得这些资源，比如R.raw.somefilename。</SPAN></TD></TR></TBODY></TABLE>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN 
style="FONT-SIZE: small">资源被最终编译近APK文件。Android创建包装类R，您可以用他找回资源。R包含一些与资源所在目录同名的子类。<BR><STRONG>全局资源</STRONG></SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; * 
很多资源都允许您定义颜色。Android接受web风格的颜色定义-一组十六进制的颜色值，按照以下序列排列：#RGB，#ARGB，#RRGGBB，#AARRGGBB。<BR>&nbsp;&nbsp;&nbsp; 
* 所有的颜色都支持ALPHA通道，头两位十六进制数字指定透明度。0在ALPHA通道中表示全透明，默认值是不透明。</SPAN></P>
<P><STRONG><SPAN style="FONT-SIZE: small">使用资源</SPAN></STRONG></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
这一节讲述如何使用您所创建的资源，包括：</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
在代码中使用资源 如何在代码中使用资源。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
如何引用其他资源中的资源 您可以从其他资源中引用资源。您可以重新使用资源内部的通用资源。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
支持资源更替 您可以在加载时依据语言、显示配置和主机硬件的不同指定不同的资源。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">在编译时，Android生成名为R的类。R包含您应用程序所用到的所有的类。这个类包含一些与res下子目录同名的子类。这些子类包含每一个您在资源文件中定义的资源的标识。这些资源标识可以在您的代码中引用。这里有一段简单的资源文件，包含一些文字，布局器和图片资源。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">注意：R类是自动生成的，并且它不能被手动修改。当资源发生变动时，它会自动修改。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">package com.android.samples;<BR>public final 
class R {<BR>&nbsp;&nbsp;&nbsp; public static final class string 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static final int 
greeting=0x0204000e;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static 
final int 
start_button_text=0x02040001;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
public static final int 
submit_button_text=0x02040008;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
public static final int main_screen_title=0x0204000a;<BR>&nbsp;&nbsp;&nbsp; 
};<BR>&nbsp;&nbsp;&nbsp; public static final class layout 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static final int 
start_screen=0x02070000;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
static final int 
new_user_pane=0x02070001;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
static final int select_user_list=0x02070002;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; };<BR>&nbsp;&nbsp;&nbsp; 
public static final class drawable 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static final int 
company_logo=0x02020005;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
static final int 
smiling_cat=0x02020006;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public 
static final int 
yellow_fade_background=0x02020007;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
public static final int stretch_button_1=0x02020008;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
};<BR>};<BR><STRONG>在代码中使用资源</STRONG></SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">在代码中使用资源需要知道完整的资源ID和您的资源对象类型。下面是资源引用语法：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">R.resource_type.resource_name 或者 
android.R.resource_type.resource_name</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">resource_type是R类中保存制定类型资源的子类。resource_name是定义在XML文件中的资源名或者被其他文件类型所定义的资源文件名（无扩展名）每一类型的资源都依据其类型，被添加入某一指定的R子类；学习R子类的类型关系请参考资源引用一节。您的应用程序引用已被编译的资源时可以不带包名（比如R.resource_type.resource_name）。Android包含一个标准资源的序号，比如屏幕的样式和按钮的背景。引用这些资源，您必须使用带android的语法，比如android.R.drawable.button_background。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">下面是一些好的和不好的代码例子：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">// Load a background for the current screen 
from a drawable resource.</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">this.getWindow().setBackgroundDrawableResource(R.drawable.my_background_image);</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small">// WRONG Sending a string resource reference 
into a</SPAN></P>
<P><SPAN style="FONT-SIZE: small">// method that expects a string.</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">this.getWindow().setTitle(R.string.main_title);</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small">// RIGHT Need to get the title from the 
Resources wrapper.</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">this.getWindow().setTitle(Resources.getText(R.string.main_title));</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small">// Load a custom layout for the current 
screen.</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">setContentView(R.layout.main_screen);</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small">// Set a slide in animation for a ViewFlipper 
object.</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">mFlipper.setInAnimation(AnimationUtils.loadAnimation(this,</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
R.anim.hyperspace_in));</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small">// Set the text on a TextView 
object.</SPAN></P>
<P><SPAN style="FONT-SIZE: small">TextView msgTextView = 
(TextView)findViewByID(R.id.msg);</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">msgTextView.setText(R.string.hello_message);</SPAN></P>
<P><STRONG><SPAN style="FONT-SIZE: small">引用资源</SPAN></STRONG></P>
<P><SPAN 
style="FONT-SIZE: small">一个属性值（或资源）同样可以引用资源。这种用法常在资源布局器文件中用于文字和图片（定义在其他文件中）。这种方法可以引用任何资源，包括颜色和整数。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">比如，如果我们有一个颜色资源，我们可以写一个布局器文件，在其中指定文本颜色和尺寸。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;?xml version="1.0" 
encoding="utf-8"?&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;EditText id="text"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; xmlns:android="</SPAN><A 
href="http://schemas.android.com/apk/res/android"><SPAN 
style="FONT-SIZE: small">http://schemas.android.com/apk/res/android</SPAN></A><SPAN 
style="FONT-SIZE: small">"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:layout_width="fill_parent" 
android:layout_height="fill_parent"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: #ff0000">android:textColor="@color/opaque_red"</SPAN></SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; android:text="Hello, 
World!" /&gt;</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">注意，“@”前缀声明这是一个资源引用—随后的文本是以@[package:]type/name形式提供的资源名。在这个例子中我们不需要指明特定的包，因为我们在我们自己的包中引用。引用一个系统文件时，我们需要这样写：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;?xml version="1.0" 
encoding="utf-8"?&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;EditText id="text"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; xmlns:android="</SPAN><A 
href="http://schemas.android.com/apk/res/android"><SPAN 
style="FONT-SIZE: small">http://schemas.android.com/apk/res/android</SPAN></A><SPAN 
style="FONT-SIZE: small">"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:layout_width="fill_parent" 
android:layout_height="fill_parent"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; android:textColor="@<SPAN 
style="COLOR: #ff0000">android</SPAN>:color/opaque_red"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; android:text="Hello, 
World!" /&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">在其他的例子中您会经常看到使用资源引用实现本地化。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;?xml version="1.0" 
encoding="utf-8"?&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;EditText id="text"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; xmlns:android="</SPAN><A 
href="http://schemas.android.com/apk/res/android"><SPAN 
style="FONT-SIZE: small">http://schemas.android.com/apk/res/android</SPAN></A><SPAN 
style="FONT-SIZE: small">"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:layout_width="fill_parent" 
android:layout_height="fill_parent"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:textColor="@android:color/opaque_red"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:text="@string/hello_world" /&gt;</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">这种简便的方法可以在资源之间引用。比如，我们可以创建一个新的可绘制对象，一个真实存在的图片的别名：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;?xml version="1.0" 
encoding="utf-8"?&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;resources&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; &lt;drawable 
id="my_background"&gt;@android:drawable/theme2_background&lt;/drawable&gt;</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&lt;/resources&gt;<BR><STRONG>引用主题属性</STRONG></SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">其他种类的资源可以引用当前主题的属性值。这些属性只能是样式资源或XML属性。利用这种方法，您可以定制您的UI界面，使其与当前主题保持风格上的统一。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">下面的例子展示了如何使用系统主题设置布局器中的文本颜色：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;?xml version="1.0" 
encoding="utf-8"?&gt;</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&lt;EditText id="text"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; xmlns:android="</SPAN><A 
href="http://schemas.android.com/apk/res/android"><SPAN 
style="FONT-SIZE: small">http://schemas.android.com/apk/res/android</SPAN></A><SPAN 
style="FONT-SIZE: small">"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:layout_width="fill_parent" 
android:layout_height="fill_parent"</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; <SPAN 
style="COLOR: #ff0000">android:textColor="?android:textDisabledColor"</SPAN></SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; 
android:text="@string/hello_world" /&gt;</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">注意：引用主题属性的方法和引用资源的方法很相似，仅仅是用“？”替代了“@”。当您使用这个标记，你所提供的资源名必须能够在主题属性中找到，因为资源工具认为这个资源属性是被期望得到的，您不需要明确的支出他的类型（?android:attr/android:textDisabledColor）。<BR><STRONG>使用系统资源</STRONG></SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">许多包含于系统之中的资源是能被应用程序所访问的。所有的资源被定义在android.R类中。比如，您可以使用一下代码在屏幕上显示标准应用程序的ICON：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">public class MyActivity extends 
Activity<BR>{<BR>&nbsp;&nbsp;&nbsp; public void onStart()<BR>&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
requestScreenFeatures(FEATURE_BADGE_IMAGE);</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
super.onStart();</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
setBadgeResource(android.R.drawable.sym_def_app_icon);<BR>&nbsp;&nbsp;&nbsp; 
}<BR>}</SPAN></P>
<P><SPAN style="FONT-SIZE: small">类似的，下面的代码会更改您的系统主题：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">public class MyActivity extends 
Activity<BR>{<BR>&nbsp;&nbsp;&nbsp; public void onStart()<BR>&nbsp;&nbsp;&nbsp; 
{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; super.onStart();</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
setTheme(android.R.style.Theme_Black);<BR>&nbsp;&nbsp;&nbsp; 
}<BR>}<BR><STRONG>为语言和配置提供可更换的资源</STRONG></SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">您可以为您的应用程序选择不同的UI语言和硬件配置。注意，尽管您可以使用不同的字符串，布局管理器和其他的很多资源，SDK不会暴露方法支持您显示的指定何种资源需要被加载。Android识别整套资源的硬件和本地化属性，而后适当的加载他们。用户可以在设备的设置面板中更换语言设置。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">为了包含可更换资源，创建平行的资源目录，以限定的方式命名这些目录，配置文件也同样适用（语言、屏幕等）。下面的例子给出同时支持英语和法语的方法：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; res/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
values-en/</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
strings.xml</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
values-fr/</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
strings.xml</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">Android支持多种命名限定和多样的值风格。添加这些信息到资源目录末尾，使用连接号分离。您可以为单个目录添加多段限定。但是他们需要保持一定顺序以方便阅读和理解。下面的例子就是一个带有限定的可绘制对象资源目录的全名：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; res/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
drawable-en-rUS-port-160dpi-finger-keysexposed-qwerty-dpad-480x320/</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">更具代表性的，您可能需要指定一些资源配置参数。您也许需要除去完整列表中的一些值，但是还有很多很多值被保留在列表中：</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp; res/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
drawable-en-rUS-finger/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
drawable-port/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
drawable-port-160dpi/</SPAN></P>
<P><SPAN style="FONT-SIZE: small">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
drawable-qwerty/</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<TABLE style="WIDTH: 80%" cellSpacing=1 cellPadding=3 border=1>
  <TBODY>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;限定词</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;值</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;语言</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;两字节ISO 639-1 低位的语言编码，比如：en, fr, 
      es</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;区域</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;两字节ISO 3166-1-alpha-2 
      带有小写"r"前缀的大写地区编码。如： rUS, rFR, rES</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;屏幕方向</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;port, land, square</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;屏幕像素密度</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;92dpi, 108dpi, etc.</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;触摸屏类型</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;notouch, stylus, 
  finger</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;用户是否可以使用键盘</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;keysexposed, 
  keyshidden</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;默认的文字输入方法</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;nokeys, qwerty, 
12key</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;默认的非触摸导航方法</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;notouch, dpad, trackball, 
      wheel</SPAN></TD></TR>
  <TR>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;屏幕尺寸</SPAN></TD>
    <TD><SPAN style="FONT-SIZE: small">&nbsp;320x240, 640x480, etc. 
      较大的尺寸必须首先声明。</SPAN></TD></TR></TBODY></TABLE>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN 
style="FONT-SIZE: small">次列表不包括设备定制的参数，比如信号、商标等。所有应用程序应该知道的信息都需要按照上面的列表信息编码。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">这里有一些命名的通用原则：</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
值之间用连接号连接</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
值是大小写敏感的，比如</SPAN></P>
<P><SPAN style="FONT-SIZE: small">o&nbsp;&nbsp;&nbsp; 
一个指定的drawable目录必须命名为drawable-port，而不是drawable-PORT。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
每种限定词只能有一种选择，您不能命名目录为drawable-rEN-rFR/。</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
您可以添加多种限定词，但是每个限定词必须在在上面列表中。比如drawable-en-rUS-land表明其用于直板的美式英语设别上。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
带有限定词的目录不能被嵌套，比如，res/drawable/drawable-en是不允许的。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">·&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
资源引用在语法中表示为未加修饰的表达式，比如 
MyApp/res/drawable-port-92dp/myimage.png，在XML中表示为：@drawable/myimage，在代码中表示为：R.drawable.myimage。<BR><STRONG>Android如何找到最匹配的目录</STRONG></SPAN></P>
<P><SPAN style="FONT-SIZE: small">Android将根据配置文件挑选资源，挑选过程为：</SPAN></P>
<P><SPAN 
style="FONT-SIZE: small">1．&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
排除所有和配置文件中指定的当前设备参数不匹配的资源。比如，如果屏幕像素密度为108dpi，下面所列出的目录中，只有MyApp/res/drawable-port-92dpi/会被排除。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable/myimage.png</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable-en/myimage.png</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable-port/myimage.png</SPAN></P>
<P><SPAN style="TEXT-DECORATION: underline"><SPAN 
style="FONT-SIZE: small">MyApp/res/drawable-port-92dpi/myimage.png</SPAN></SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN 
style="FONT-SIZE: small">2．&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
接下来系统将根据限定字的多少来筛选。例如，如果您的本地系统识别为en-GB编码的便携设备，随后我们还剩两个目录可以匹配。</SPAN></P>
<P><SPAN style="TEXT-DECORATION: underline"><SPAN 
style="FONT-SIZE: small">MyApp/res/drawable/myimage.png</SPAN></SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable-en/myimage.png</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable-port/myimage.png</SPAN></P>
<P><SPAN style="FONT-SIZE: small"></SPAN>&nbsp;</P>
<P><SPAN 
style="FONT-SIZE: small">3．&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
选择机制将根据配置文件中定义的优先级，优先级定义于上面的列表顺序中。</SPAN></P>
<P><SPAN style="FONT-SIZE: small">MyApp/res/drawable-en/myimage.png<BR><SPAN 
style="TEXT-DECORATION: underline">MyApp/res/drawable-port/myimage.png</SPAN><BR></SPAN></P>
<P><SPAN style="FONT-SIZE: small">来源：</SPAN><A 
href="http://blog.163.com/zhao_tian_yu/blog/static/59511536200912010501573/"><SPAN 
style="FONT-SIZE: small">http://blog.163.com/zhao_tian_yu/blog/static/59511536200912010501573/</SPAN></A></P></DIV></DIV>
<SCRIPT type=text/javascript><!--
google_ad_client = "pub-1076724771190722";
/* JE个人博客468x60 */
google_ad_slot = "5506163105";
google_ad_width = 468;
google_ad_height = 60;
//-->
</SCRIPT>

<SCRIPT src="Android资源文件.files/index.htm" type=text/javascript>
</SCRIPT>

<DIV class=blog_nav>
<DIV class=pre_next><A class=next title="android 布局管理" 
href="http://java-admin.javaeye.com/blog/463925">android 布局管理</A> | <A class=pre 
title=对话框和浮动Activity 
href="http://java-admin.javaeye.com/blog/461982">对话框和浮动Activity</A> </DIV></DIV>
<DIV class=blog_bottom>
<UL>
  <LI>15:37 </LI>
  <LI>浏览 (780) </LI>
  <LI><A href="http://java-admin.javaeye.com/blog/462164#comments">评论</A> (0) 
  </LI>
  <LI>分类: <A href="http://java-admin.javaeye.com/category/56135">Android</A> 
  </LI>
  <LI class=last><A class=more href="http://www.javaeye.com/wiki/topic/462164" 
  target=_blank>相关推荐</A> </LI></UL></DIV>
<DIV class=blog_comment>
<H5>评论</H5><A id=comments name=comments></A></DIV>
<DIV class=blog_comment>
<H5>发表评论</H5>
<FORM id=comment_form onsubmit="return false;" action=/blog/462164 
method=post><INPUT id=editor_bbcode_flag type=hidden> 
<DIV id=editor_main><TEXTAREA class="validate-richeditor bad-words min-length-5" id=editor_body style="WIDTH: 500px; HEIGHT: 350px" name=comment[body] rows=20 cols=40></TEXTAREA></DIV>
<SCRIPT type=text/javascript>
  var editor = new Control.TextArea.Editor("editor_body", "bbcode", false);
</SCRIPT>

<P style="PADDING-RIGHT: 30px; TEXT-ALIGN: right">您还没有登录，请<A 
href="http://java-admin.javaeye.com/login">登录</A>后发表评论(快捷键 Alt+S / Ctrl+Enter) <INPUT class=submit id=quick_reply_button type=submit value=提交 name=commit></P></FORM>
<SCRIPT type=text/javascript>
          new HotKey("s",function() {$('quick_reply_button').click();},{altKey: true, ctrlKey: false});
          new HotKey(new Number(13),function() {$('quick_reply_button').click();},{altKey: false, ctrlKey: true});

          new Validation("comment_form", {immediate: false, onFormValidate: function(result, form){
    
            if(confirm('您需要登录以后才能执行这个操作，现在要登录吗？')) window.location.href = '/login';
    
        }});
        </SCRIPT>
</DIV></DIV>
<SCRIPT type=text/javascript>
  dp.SyntaxHighlighter.HighlightAll('code', true, true);

  fix_image_size($$('div.blog_content img'), 700);
  function quote_comment(id) {
    new Ajax.Request('/editor/quote', {
      parameters: {'id':id, 'type':'Post'},
      onSuccess:function(response){editor.bbcode_editor.textarea.insertAfterSelection(response.responseText);}
    });
  }
</SCRIPT>
</DIV>
<DIV id=local>
<DIV class=local_top></DIV>
<DIV id=blog_owner>
<DIV id=blog_owner_logo><A href="http://java-admin.javaeye.com/"><IMG class=logo 
title="java-admin的博客: java-admin" alt=java-admin的博客 
src="Android资源文件.files/9ad8fe14-a6ea-4fc9-a821-f9807b99581a.jpg"></A></DIV>
<DIV id=blog_owner_name>java-admin</DIV></DIV>
<DIV id=blog_actions>
<UL>
  <LI>浏览: 86780 次 
  <LI>性别: <IMG title=男 alt=Icon_minigender_1 
  src="Android资源文件.files/icon_minigender_1.gif"> 
  <LI>来自: 陕西.西安 
  <LI><IMG src="Android资源文件.files/offline.gif"> 
  <LI><A class=profile 
  href="http://java-admin.javaeye.com/blog/profile">详细资料</A> <A class=guest_book 
  href="http://java-admin.javaeye.com/blog/guest_book">留言簿</A> </LI></UL>
<H5>搜索本博客</H5>
<FORM action=/blog/search method=get><INPUT class=text id=query 
style="MARGIN-LEFT: 10px; WIDTH: 110px" name=query> <INPUT class=submit type=submit value=搜索> </FORM></DIV>
<DIV class=clearfix id=user_visits>
<H5>最近访客 <SPAN 
style="PADDING-LEFT: 30px; FONT-WEIGHT: normal; FONT-SIZE: 12px"><A 
href="http://java-admin.javaeye.com/blog/user_visits">&gt;&gt;更多访客</A></SPAN></H5>
<DIV class=user_visit>
<DIV class=logo><A href="http://oscar7171.javaeye.com/" target=_blank><IMG 
class=logo title="oscar7171的博客: " alt=oscar7171的博客 
src="Android资源文件.files/user-logo-thumb.gif"></A></DIV>
<DIV class=left><A href="http://oscar7171.javaeye.com/" 
target=_blank>oscar7171</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://successlikun.javaeye.com/" target=_blank><IMG 
class=logo title="successlikun的博客: " alt=successlikun的博客 
src="Android资源文件.files/user-logo-thumb.gif"></A></DIV>
<DIV class=left><A href="http://successlikun.javaeye.com/" 
target=_blank>successlikun</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://kekemaidou.javaeye.com/" target=_blank><IMG 
class=logo title="kekemaidou的博客: " alt=kekemaidou的博客 
src="Android资源文件.files/user-logo-thumb.gif"></A></DIV>
<DIV class=left><A href="http://kekemaidou.javaeye.com/" 
target=_blank>kekemaidou</A></DIV></DIV>
<DIV class=user_visit>
<DIV class=logo><A href="http://yuyanshan.javaeye.com/" target=_blank><IMG 
class=logo title="yuyanshan的博客: yuyanshan" alt=yuyanshan的博客 
src="Android资源文件.files/3413aa28-0384-3806-bef9-9305486132cc-thumb.jpg"></A></DIV>
<DIV class=left><A href="http://yuyanshan.javaeye.com/" 
target=_blank>yuyanshan</A></DIV></DIV></DIV>
<DIV id=blog_menu>
<H5>博客分类</H5>
<UL>
  <LI><A href="http://java-admin.javaeye.com/">全部博客 (134)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/18176">FreeMarke (2)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/18991">开发中遇到的问题 (24)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/19138">javascript/css/json 
  (24)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/21153">SQL (14)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/42811">Mysql (7)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/28810">oqacle存储过程\游标\包 
  (3)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/40737">eclipse (1)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/41507">power designer 
  (1)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/42812">tomcate (1)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/80988">Spring (4)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/42873">iBATIS (1)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/56135">Android (30)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/60485">xml (4)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/82706">FCKeditor (4)</A> 
  <LI><A href="http://java-admin.javaeye.com/category/86526">Java 基础 (7)</A> 
  </LI></UL></DIV>
<DIV id=guest_books>
<H5>我的留言簿 <SPAN 
style="PADDING-LEFT: 20px; FONT-WEIGHT: normal; FONT-SIZE: 12px"><A 
href="http://java-admin.javaeye.com/blog/guest_book">&gt;&gt;更多留言</A></SPAN></H5>
<UL>
  <LI>恩 我有会坚持写的呢 过年刚回来有点小忙 完了我继续写 <BR>-- by <A 
  href="http://java-admin.javaeye.com/blog/guest_book#2535">haric</A> 
</LI></UL></DIV>
<DIV id=blog_others>
<H5>其他分类</H5>
<UL>
  <LI><A href="http://java-admin.javaeye.com/blog/favorite">我的收藏</A> (43) 
  <LI><A href="http://java-admin.javaeye.com/blog/topic">我的论坛主题贴</A> (0) 
  <LI><A href="http://java-admin.javaeye.com/blog/post">我的所有论坛贴</A> (5) 
  <LI><A href="http://java-admin.javaeye.com/blog/article">我的精华良好贴</A> (0) 
</LI></UL></DIV>
<DIV id=recent_groups>
<H5>最近加入圈子</H5>
<UL></UL></DIV>
<DIV id=month_blogs>
<H5>存档</H5>
<UL>
  <LI><A href="http://java-admin.javaeye.com/blog/monthblog/2010-07">2010-07</A> 
  (12) 
  <LI><A href="http://java-admin.javaeye.com/blog/monthblog/2010-06">2010-06</A> 
  (2) 
  <LI><A href="http://java-admin.javaeye.com/blog/monthblog/2010-03">2010-03</A> 
  (3) 
  <LI><A href="http://java-admin.javaeye.com/blog/monthblog_more">更多存档...</A> 
  </LI></UL></DIV>
<DIV id=recent_comments>
<H5>最新评论</H5>
<UL>
  <LI><A title=CSS控制的网页input输入框的各种样式 
  href="http://java-admin.javaeye.com/blog/518635#comments">CSS控制的网页input输入 
  ...</A><BR>这个很有用，有时候需要搭配背景，普通的输入框很难达到效果，加上透明等效果，就很好 ...<BR>-- by <A 
  href="http://zombre.javaeye.com/" target=_blank>zombre</A> 
  <LI><A title="JAVA中在声明main的时候的String[] args是什么意思？" 
  href="http://java-admin.javaeye.com/blog/193541#comments">JAVA中在声明main的时候的 
  ...</A><BR>如果不写也不会报错，只是编译器不会把这个方法当程序入口罢了。<BR>-- by <A 
  href="http://irving-wei.javaeye.com/" target=_blank>Irving_wei</A> 
  <LI><A title="JNI (Java Native Interface)是什么收藏" 
  href="http://java-admin.javaeye.com/blog/333933#comments">JNI (Java Native 
  Interfa ...</A><BR>想看都看不下去 这也忒乱了 <BR>-- by <A 
  href="http://just4java.javaeye.com/" target=_blank>ranyut</A> 
  <LI><A title="利用Power Designer 11创建数据库表结构时的错误与警告" 
  href="http://java-admin.javaeye.com/blog/172858#comments">利用Power Designer 11创 
  ...</A><BR>第二个警告怎么去掉呢？不见得非要有什么关联的吧<BR>-- by <A 
  href="http://spiritfrog.javaeye.com/" target=_blank>spiritfrog</A> 
</LI></UL></DIV>
<DIV id=comments_top>
<H5>评论排行榜</H5>
<UL>
  <LI><A title=CSS控制的网页input输入框的各种样式 
  href="http://java-admin.javaeye.com/blog/518635">CSS控制的网页input输入框的各种样式</A> 
  <LI><A title=ajax网站 
  href="http://java-admin.javaeye.com/blog/585472">ajax网站</A> 
  <LI><A title=Android数据存取之Preferences 
  href="http://java-admin.javaeye.com/blog/461830">Android数据存取之Preferences</A> 
  <LI><A title="Android高手进阶教程(四)之----Android 中自定义属性(attr.xml,TypedArray)的使用!" 
  href="http://java-admin.javaeye.com/blog/724486">Android高手进阶教程(四)之----Android 
  ...</A> 
  <LI><A title=首页head区代码规范 
  href="http://java-admin.javaeye.com/blog/518664">首页head区代码规范</A> 
</LI></UL></DIV>
<DIV id=rss>
<UL>
  <LI><A href="http://java-admin.javaeye.com/rss" target=_blank><IMG alt=Rss 
  src="Android资源文件.files/rss.png"></A> 
  <LI><A 
  href="http://fusion.google.com/add?feedurl=http://java-admin.javaeye.com/rss" 
  target=_blank><IMG alt=Rss_google src="Android资源文件.files/rss_google.gif"></A> 
  <LI><A 
  href="http://www.xianguo.com/subscribe.php?url=http://java-admin.javaeye.com/rss" 
  target=_blank><IMG alt=Rss_xianguo 
  src="Android资源文件.files/rss_xianguo.jpg"></A> 
  <LI><A href="http://www.google.com/search?hl=zh-CN&amp;q=RSS">[什么是RSS?]</A> 
  </LI></UL></DIV>
<DIV class=local_bottom></DIV></DIV></DIV>
<DIV class=clearfix id=footer>
<DIV id=copyright>
<HR>
声明：JavaEye文章版权属于作者，受法律保护。没有作者书面许可不得转载。若作者同意转载，必须以超链接形式标明文章原始出处和作者。<BR>© 
2003-2010 JavaEye.com. All rights reserved. 上海炯耐计算机软件有限公司 [ 沪ICP备05023328号 ] 
</DIV></DIV></DIV>
<SCRIPT type=text/javascript>
  document.write("<img src='http://stat.javaeye.com/?url="+ encodeURIComponent(document.location.href) + "&referrer=" + encodeURIComponent(document.referrer) + "&logged_in=no" + "' width='0' height='0' />");
</SCRIPT>
</BODY></HTML>
