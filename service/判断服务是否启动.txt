/**
 * 判断服务是否启动, 注意只要名称相同, 会检测任何服务.
 *
 * @param context      上下文
 * @param serviceClass 服务类
 * @return 是否启动服务
 */
public static boolean isServiceRunning(Context context, Class<?> serviceClass) {
    if (context == null) {
        return false;
    }

    Context appContext = context.getApplicationContext();
    ActivityManager manager = (ActivityManager) appContext.getSystemService(Context.ACTIVITY_SERVICE);

    if (manager != null) {
        List<ActivityManager.RunningServiceInfo> infos = manager.getRunningServices(Integer.MAX_VALUE);
        if (infos != null && !infos.isEmpty()) {
            for (ActivityManager.RunningServiceInfo service : infos) {
                // 添加Uid验证, 防止服务重名, 当前服务无法启动
                if (getUid(context) == service.uid) {
                    if (serviceClass.getName().equals(service.service.getClassName())) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
}

/**
 * 获取应用的Uid, 用于验证服务是否启动
 *
 * @param context 上下文
 * @return uid
 */
public static int getUid(Context context) {
    if (context == null) {
        return -1;
    }

    int pid = android.os.Process.myPid();
    ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);

    if (manager != null) {
        List<ActivityManager.RunningAppProcessInfo> infos = manager.getRunningAppProcesses();
        if (infos != null && !infos.isEmpty()) {
            for (ActivityManager.RunningAppProcessInfo processInfo : infos) {
                if (processInfo.pid == pid) {
                    return processInfo.uid;
                }
            }
        }
    }
    return -1;
}