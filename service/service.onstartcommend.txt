参见：
Android Service解析解析再解析
	http://www.cnblogs.com/not-code/archive/2011/05/21/2052713.html

Android开发的过程中，每次调用startService(Intent)的时候，都会调用该Service对象的onStartCommand(Intent,int,int)
该方法的int返回值用来告诉系统：在service启动完毕后，如果被Kill，系统将如何操作

START_STICKY：
	在运行onStartCommand后service进程被kill后，那将保留在开始状态，但是不保留那些传入的intent。
	不久后service就会再次尝试重新创建，因为保留在开始状态，在创建service后将保证调用onstartCommand。如果没有传递任何开始命令给service，那将获取到null的intent
START_NOT_STICKY：
	在运行onStartCommand后service进程被kill后，并且没有新的intent传递给它。Service将移出开始状态，并且直到新的明显的方法（startService）调用才重新创建。
	因为如果没有传递任何未决定的intent那么service是不会启动，也就是期间onstartCommand不会接收到任何null的intent。
START_REDELIVER_INTENT：
	在运行onStartCommand后service进程被kill后，系统将会再次启动service，并传入最后一个intent给onstartCommand。
	直到调用stopSelf(int)才停止传递intent。如果在被kill后还有未处理好的intent，那被kill后服务还是会自动启动。因此onstartCommand不会接收到任何null的intent。
START_STICKY_COMPATIBILITY：
	START_STICKY的兼容版本，但不保证服务被kill后一定能重启。