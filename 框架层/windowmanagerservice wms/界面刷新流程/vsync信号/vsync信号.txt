参见：
SurfaceFlinger/

Vsync使得 屏幕刷新率（RFS）和 帧率(FPS) 强制一致
Android设定的刷新率是60FPS(Frame Per Second)，则我们需要在16ms之内，完成 UI数据准备 绘制合成 两项工作

系统发送一个HW_Vsync信号（该信号分解为：Vsync和SF_Vsync，通过Vsync offset，使得：SF_Vsync信号 相较于Vsync信号 要延后一段时间才发送）
收到Vsync信号后，App进程 在Canvas上（ViewRootImpl.Surface.lockCanvas）进行绘制（最终UI数据会放入到匿名共享内存中（GraphicsBuffer））
收到SF_Vsync信号，SurfaceFlinger服务 将待刷新的UI数据（对应于Surface）（来自匿名共享内存）进行合成，进行渲染
上述2个信号所对应的操作的 耗时总和 需要小于 16ms（= 1s/FPS）

在下一个Vsync信号时，本次合成后的Surface 将被绘制到屏幕上

------------------------------之下为老的内容
丢帧：
一个Vsync信息到达时，我们来更新屏幕的背景图片, 但需要24ms才能完成本次运算
当Surface合成信号来时，合成操作的 源Surface并未得到更新（因为新的内容还未绘制到Surface上），则用户看到的还是老的内容
当下一个 Surface合成信号来时，才能基于新的Surface进行合成，用户那时才能看到新的内容合成时
则，我们一共经历了两个sync信号（而不是一个），才能看到新内容，则可认为：丢了1帧

丢帧给用户的感觉就是卡顿