参见：http://hi.baidu.com/justin8335/blog/item/8976de1d009e35f91ad5762e.html	讲述了集成eclipse和cdthttp://hi.baidu.com/wentaokou/blog/item/8150c54db8a1fcf6d62afc0c.html	8步教你打开Android之门 NDK入门教程http://www.cnblogs.com/ginoz/archive/2010/06/30/1768443.html	另外一个安装教程，讲述了cygwin中应该安装哪些东西http://www.pyfun.com/ziliao/201009/1634.html	提到了makeapphttp://hi.baidu.com/tmy13/blog/item/3f6c29294991bbf799250a85.html/cmtid/3870828f8ca523f4513d92afhttp://blog.csdn.net/hzhxxx/archive/2010/07/21/5752627.aspxhttp://www.cnblogs.com/halzhang/archive/2010/08/03/1791405.htmljni实现了 java和native库 之间的相互调用1. NDK 下载最新版Android NDK地址：http://dl.google.com/android/ndk/android-ndk-r5b-windows.zip说明：如果你需要下载支持了stl的ndk：http://www.crystax.net/android/ndk.php2.针对于windows环境，配置交叉编译环境下载Cygwin并安装。我们通过Cygwin编译一个交叉环境。地址：http://www.cygwin.com/ 选择Devel Install，安装gcc和make等工具。 说明：安装完毕cygwin后，输入gcc -v和make -v均正常你可能要安装的工具有：	autoconf2.1	automake1.10	binutils	gcc	gcc-core	gcc4-core	gcc-g++	gdb	pcre	libpcre-devel	GNU awk	libstdc++	make3.针对于windows环境，配置NDK环境在Cygwin的root\home\<username>\bath_profile添加 ###########################################创建 ndk的路径变量，如NDK_ROOT=/cygdrive/d/android_ndk/android-ndk-r5#添加到PATH环境变量中export PATH="$NDK_ROOT:$PATH" #########################################4.在eclipse下建立一个jni示例工程，参见testJNI>>>如何生成so库建立natvie类：com.ql.so.MyLogic，其包含了native方法：public native int add(int x, int y);cmd进入testJNI/bin下，javah com.ql.so.MyLogic，生成com_ql_so_MyLogic.h	该.h包含的函数原型为：JNIEXPORT jint JNICALL Java_com_ql_so_MyLogic_add(JNIEnv *, jobject, jint, jint);	其中		JNIEXPORT为jni规定		jint为返回类型int在jni中的对应形式		JNICALL为jni规定		Java_com_ql_so_MyLogic_add为add函数名在jni中的对应形式			Java为jni规定			com_ql_so_MyLogic_为完全限定包名				则：只有在com.ql.so.MyLogic中才能声明add的native形式			add为方法名		方法参数(JNIEnv *, jobject, jint, jint)中			JNIEnv *, jobject为jni规定			jint为int类型在jni中的对应形式创建testJNI/jni目录，并复制com_ql_so_MyLogic.h到该目录下，修改其文件名为com_ql_so_MyLogic.c编辑com_ql_so_MyLogic.c，实现其add方法复制android-ndk-r5\samples\hello-jni\jni\Android.mk到testJNI/jni下，修改其中的LOCAL_MODULE和LOCAL_SRC_FILES	LOCAL_MODULE指明了：最终生成的so的名称为：lib+{LOCAL_MODULE}+.so	LOCAL_SRC_FILES指明了：生成so所需要的.c文件名针对于windows环境，启动Cygwin，	进入cygdrive，cygdrive代表了我的电脑	进入testJNI/jni	执行ndk-build，将会在testJNI/libs/armeabi/生成一个so	注意：如果要重新build，请删除testJNI/obj/和testJNI/libs>>>如何使用so中的方法：	在java项目中任何一个位置调用System.loadLibrary，其参数参见so文件名，注意要去掉lib和.so生成MyLogic的对象，调用其add方法5.说明当你需要不止一个.c/.h时，	local_src_files=a.c b.c c.c	local_c_include=include.folder如果你需要额外的so（即是：如可能拥有多个so，并不是每个so都是有ndk-build生成，而是事先有一些so），将该so放入obj/armeabi/下，然后运行ndk-build，将obj/armeabi/下的所有so拷贝到libs\armeabi下