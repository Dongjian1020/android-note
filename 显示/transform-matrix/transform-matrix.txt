参见：
mycsdn/android中的坐标变换
my/transform
my/myview中，matrix和graphics.camera的使用
Matrix原理
	https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B09%5DMatrix_Basic.md
Matrix详解
	https://github.com/GcsSloop/AndroidNote/blob/master/CustomView/Advance/%5B10%5DMatrix_Method.md

M1.pre(M2)：新矩阵M'=M1*M2
M1.post(M2)：M'=M2*M1
M1.set(M2)：M'=M2

x'=M*x
代表着：新坐标系（老坐标系 经过M坐标变换后 得到的坐标系）下的点x 在 老坐标系下的 坐标x'

设坐标变换矩阵为：M1*M2*M3
则 坐标系的变换效果为：先执行M1，再M2，再M3
	虽然在矩阵乘法上，x'= M1*M2*M3 *x，x会先和M3相乘，再M2，再M1

translate:
参见：my/moveview
--
另外一种移动方法：
通过view.offsetTopAndBottom/offsetLeftAndRight的方式，移动后，响应区域也更新了
	参见：my/moveView

绕(a,b)旋转，本质上：
	先将坐标原点移到点(a,b)
	然后执行旋转
	最后再把坐标原点移回去
	
rotate：
my/rotate
my/talkingtom5中，拍照场景的char的旋转
参见：csdn博客
bitmap旋转：创建一个坐标变换后的bitmap（canvas的坐标系没有改变）
改变canvas的坐标系，使得：看上去，view针对于x/y/z轴进行了旋转

